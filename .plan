


Units:

 * Finance DSL (Bedrag, Per, etc)
 * Engine
   * Allows full programmatic usage
   * Includes Condition (DslCondtion's bare parts)
   * Includes operations with mathematical symbols
 * Derivation DSL
   * Core (actually included in Engine project, i.e. the Bare Items)
   * Language packs extend core domain objects an provide operations using natural language
     * NL
     * EN
     * ...


* Quantity comes into our project (maybe duplicate in Finance)
* Split into three projects
*
* Finance DSL Translate to English
* Decouple Finance DSL from Engine (add Bridge package)


nl.rabobank.oss.rules.finance.core
nl.rabobank.oss.rules.finance.nl
nl.rabobank.oss.rules.finance.en

nl.rabobank.oss.rules.engine.FactEngine
nl.rabobank.oss.rules.engine.domain
nl.rabobank.oss.rules.engine.types
nl.rabobank.oss.rules.engine.operators

nl.rabobank.oss.rules.dsl.core
nl.rabobank.oss.rules.dsl.nl
nl.rabobank.oss.rules.dsl.en
